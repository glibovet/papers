-- MySQL Script generated by MySQL Workbench
-- 08/18/16 18:06:50
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema papers
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema papers
-- -----------------------------------------------------
USE `papers` ;

-- -----------------------------------------------------
-- Table `papers`.`role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `papers`.`role` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `name` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
  ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `papers`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `papers`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `email` VARCHAR(45) NOT NULL COMMENT '',
  `password` VARCHAR(45) NOT NULL COMMENT '',
  `active` TINYINT(1) NULL DEFAULT 1 COMMENT '',
  `role_id` INT NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `fk_user_to_role_idx` (`role_id` ASC)  COMMENT '',
  CONSTRAINT `fk_user_to_role`
  FOREIGN KEY (`role_id`)
  REFERENCES `papers`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
  ENGINE = InnoDB;

-- -----------------------------------------------------
-- table `papers`.`permissions`
-- -----------------------------------------------------
create table if not exists `papers`.`permissions` (
  `id` int not null auto_increment,
  `name` varchar(45) not null,
  primary key (`id`),
  unique index `name_unique` (`name` asc))
  engine = innodb;

-- -----------------------------------------------------
-- table `papers`.`role_permissions`
-- -----------------------------------------------------
create table if not exists `papers`.`role_permissions` (
  `id` int not null auto_increment,
  `role_id` int not null,
  `permission_id` int not null,
  primary key (`id`),
  index `role_to_permission_idx` (`role_id` asc),
  index `permission_to_role_idx` (`permission_id` asc),
  constraint `role_to_permission`
  foreign key (`role_id`)
  references `papers`.`role` (`id`)
    on delete no action
    on update no action,
  constraint `permission_to_role`
  foreign key (`permission_id`)
  references `papers`.`permissions` (`id`)
    on delete no action
    on update no action)
  engine = innodb;

insert into `papers`.`role` (`name`) values ('user');
insert into `papers`.`role` (`name`) values ('moderator');
insert into `papers`.`role` (`name`) values ('admin');

INSERT INTO `papers`.`permissions` (`name`) VALUES ('ROLE_USER');
INSERT INTO `papers`.`permissions` (`name`) VALUES ('ROLE_MODERATOR');
INSERT INTO `papers`.`permissions` (`name`) VALUES ('ROLE_ADMIN');

insert into `papers`.`role_permissions` (`role_id`, `permission_id`) values ('1', '1');
insert into `papers`.`role_permissions` (`role_id`, `permission_id`) values ('2', '1');
insert into `papers`.`role_permissions` (`role_id`, `permission_id`) values ('2', '2');
insert into `papers`.`role_permissions` (`role_id`, `permission_id`) values ('3', '1');
insert into `papers`.`role_permissions` (`role_id`, `permission_id`) values ('3', '2');
insert into `papers`.`role_permissions` (`role_id`, `permission_id`) values ('3', '3');

insert into `papers`.`users` (`email`, `password`, `active`, `role_id`) VALUES ('admin@papers.com',MD5('admin'),1,3);

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
